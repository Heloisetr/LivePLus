{"ast":null,"code":"import { GET_INITIAL_COORDINATES, GET_INITIAL_COORDINATES_FAILURE, GET_INITIAL_COORDINATES_SUCCESS, GET_NEXT_GENERATION, GET_NEXT_GENERATION_SUCCESS, GET_NEXT_GENERATION_FAILURE } from 'actions/dashboardAction';\nconst initialState = {\n  fileData: '',\n  coordData: {\n    mapLength: 0,\n    coordinates: []\n  }\n};\nexport default function dashboardState(state = initialState, action) {\n  switch (action.type) {\n    case GET_INITIAL_COORDINATES:\n      return { ...state,\n        fileData: action.payload\n      };\n\n    case GET_INITIAL_COORDINATES_SUCCESS:\n      return { ...state,\n        coordData: action.payload\n      };\n\n    case GET_INITIAL_COORDINATES_FAILURE:\n      return { ...state\n      };\n\n    case GET_NEXT_GENERATION:\n      return { ...state\n      };\n\n    case GET_NEXT_GENERATION_SUCCESS:\n      return { ...state,\n        coordData: action.payload\n      };\n\n    case GET_NEXT_GENERATION_FAILURE:\n      return { ...state\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/reducers/dashboardReducer.ts"],"names":["GET_INITIAL_COORDINATES","GET_INITIAL_COORDINATES_FAILURE","GET_INITIAL_COORDINATES_SUCCESS","GET_NEXT_GENERATION","GET_NEXT_GENERATION_SUCCESS","GET_NEXT_GENERATION_FAILURE","initialState","fileData","coordData","mapLength","coordinates","dashboardState","state","action","type","payload"],"mappings":"AAAA,SACEA,uBADF,EAEEC,+BAFF,EAGEC,+BAHF,EAIEC,mBAJF,EAKEC,2BALF,EAMEC,2BANF,QAOO,yBAPP;AAYA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,SAAS,EAAE,CADF;AAETC,IAAAA,WAAW,EAAE;AAFJ;AAFQ,CAArB;AAaA,eAAe,SAASC,cAAT,CAAwBC,KAAgB,GAAGN,YAA3C,EAAyDO,MAAzD,EAAwF;AACrG,UAAOA,MAAM,CAACC,IAAd;AACE,SAAKd,uBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELL,QAAAA,QAAQ,EAAEM,MAAM,CAACE;AAFZ,OAAP;;AAKF,SAAKb,+BAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKd,+BAAL;AACE,aAAO,EACL,GAAGW;AADE,OAAP;;AAIF,SAAKT,mBAAL;AACE,aAAO,EACL,GAAGS;AADE,OAAP;;AAIF,SAAKR,2BAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,SAAS,EAAEK,MAAM,CAACE;AAFb,OAAP;;AAKF,SAAKV,2BAAL;AACE,aAAO,EACL,GAAGO;AADE,OAAP;;AAIF;AACE,aAAOA,KAAP;AAnCJ;AAqCD","sourcesContent":["import {\n  GET_INITIAL_COORDINATES,\n  GET_INITIAL_COORDINATES_FAILURE,\n  GET_INITIAL_COORDINATES_SUCCESS,\n  GET_NEXT_GENERATION,\n  GET_NEXT_GENERATION_SUCCESS,\n  GET_NEXT_GENERATION_FAILURE,\n} from 'actions/dashboardAction';\n\nimport { ActionType } from 'types/ActionsType';\nimport { CoordinatesContentType } from 'types/CoordinatesType';\n\nconst initialState = {\n  fileData: '',\n  coordData: {\n    mapLength: 0,\n    coordinates: [],\n  },\n};\n\nexport interface StateType {\n  fileData: string;\n  coordData: CoordinatesContentType;\n}\n\nexport default function dashboardState(state: StateType = initialState, action: ActionType): StateType {\n  switch(action.type) {\n    case GET_INITIAL_COORDINATES:\n      return {\n        ...state,\n        fileData: action.payload,\n      };\n\n    case GET_INITIAL_COORDINATES_SUCCESS:\n      return {\n        ...state,\n        coordData: action.payload,\n      };\n\n    case GET_INITIAL_COORDINATES_FAILURE:\n      return {\n        ...state,\n      };\n\n    case GET_NEXT_GENERATION:\n      return {\n        ...state,\n      };\n\n    case GET_NEXT_GENERATION_SUCCESS:\n      return {\n        ...state,\n        coordData: action.payload,\n      };\n\n    case GET_NEXT_GENERATION_FAILURE:\n      return {\n        ...state,\n      };\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}