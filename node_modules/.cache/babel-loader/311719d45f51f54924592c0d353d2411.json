{"ast":null,"code":"import { takeLatest, put, select } from 'redux-saga/effects';\nimport { getInitialCoordinatesFailure, GET_INITIAL_COORDINATES } from 'actions/dashboardAction';\n\nfunction* getInitialCoordinatesFunction(action) {\n  const {\n    dashboardState: {\n      mapLength\n    }\n  } = yield select();\n  const payload = action;\n\n  try {//if (data && data.length > 0) {\n\n    /*const moviesData: MoviesAllDataContentType = {\n      movies: data,\n      categories: getMoviesCategories(data),\n    }*/\n    //  yield put(getInitialCoordinatesSuccess())\n    //} else {\n    //  yield put(getInitialCoordinatesFailure());\n    //}\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/sagas/dashboardSaga.ts"],"names":["takeLatest","put","select","getInitialCoordinatesFailure","GET_INITIAL_COORDINATES","getInitialCoordinatesFunction","action","dashboardState","mapLength","payload","e","dashboardSaga"],"mappings":"AAAA,SAAeA,UAAf,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA8C,oBAA9C;AAEA,SAEEC,4BAFF,EAGEC,uBAHF,QAKO,yBALP;;AAOA,UAAUC,6BAAV,CAAwCC,MAAxC,EAAgF;AAC9E,QAAM;AACJC,IAAAA,cAAc,EAAE;AAAEC,MAAAA;AAAF;AADZ,MAEF,MAAMN,MAAM,EAFhB;AAGA,QAAMO,OAAO,GAAGH,MAAhB;;AAEA,MAAI,CAEF;;AACE;AACN;AACA;AACA;AACI;AACA;AACA;AACA;AACD,GAXD,CAWE,OAAOI,CAAP,EAAU;AACV,UAAMT,GAAG,CAACE,4BAA4B,EAA7B,CAAT;AACD;AACF;;AAED,eAAe,UAAUQ,aAAV,GAA0B;AACvC,QAAMX,UAAU,CAACI,uBAAD,EAA0BC,6BAA1B,CAAhB;AACD","sourcesContent":["import { call, takeLatest, put, select } from 'redux-saga/effects';\n\nimport {\n  getInitialCoordinatesSuccess,\n  getInitialCoordinatesFailure,\n  GET_INITIAL_COORDINATES,\n  GET_INITIAL_COORDINATES_ACTION\n} from 'actions/dashboardAction';\n\nfunction* getInitialCoordinatesFunction(action: GET_INITIAL_COORDINATES_ACTION) {\n  const {\n    dashboardState: { mapLength },\n  } = yield select();\n  const payload = action;\n\n  try {\n  \n    //if (data && data.length > 0) {\n      /*const moviesData: MoviesAllDataContentType = {\n        movies: data,\n        categories: getMoviesCategories(data),\n      }*/\n    //  yield put(getInitialCoordinatesSuccess())\n    //} else {\n    //  yield put(getInitialCoordinatesFailure());\n    //}\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}"]},"metadata":{},"sourceType":"module"}