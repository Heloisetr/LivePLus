{"ast":null,"code":"import { takeLatest, put } from 'redux-saga/effects';\nimport { getInitialCoordinatesFailure, GET_INITIAL_COORDINATES } from 'actions/dashboardAction';\n\nfunction* getInitialCoordinatesFunction() {\n  try {\n    var reader = new FileReader();\n\n    var file = require('../testt');\n\n    reader.onload = function (e) {\n      var text = reader.result;\n    };\n\n    reader.readAsText(file, 'utf8'); //const file = fs.readFileSync('file.txt', 'utf8');\n    //console.log(file);\n    //const data = yield movies$.then();\n    //if (data && data.length > 0) {\n\n    /*const moviesData: MoviesAllDataContentType = {\n      movies: data,\n      categories: getMoviesCategories(data),\n    }*/\n    //  yield put(getInitialCoordinatesSuccess())\n    //} else {\n    //  yield put(getInitialCoordinatesFailure());\n    //}\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/sagas/dashboardSaga.ts"],"names":["takeLatest","put","getInitialCoordinatesFailure","GET_INITIAL_COORDINATES","getInitialCoordinatesFunction","reader","FileReader","file","require","onload","e","text","result","readAsText","dashboardSaga"],"mappings":"AAAA,SAAeA,UAAf,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,SAEEC,4BAFF,EAGEC,uBAHF,QAIO,yBAJP;;AAMA,UAAUC,6BAAV,GAA0C;AACxC,MAAI;AACF,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AACA,QAAIC,IAAI,GAAGC,OAAO,CAAC,UAAD,CAAlB;;AAEAH,IAAAA,MAAM,CAACI,MAAP,GAAgB,UAASC,CAAT,EAAY;AAC1B,UAAIC,IAAI,GAAGN,MAAM,CAACO,MAAlB;AACD,KAFD;;AAIAP,IAAAA,MAAM,CAACQ,UAAP,CAAkBN,IAAlB,EAAwB,MAAxB,EARE,CASL;AACA;AACG;AAEA;;AACE;AACN;AACA;AACA;AACI;AACA;AACA;AACA;AACD,GAtBD,CAsBE,OAAOG,CAAP,EAAU;AACV,UAAMT,GAAG,CAACC,4BAA4B,EAA7B,CAAT;AACD;AACF;;AAED,eAAe,UAAUY,aAAV,GAA0B;AACvC,QAAMd,UAAU,CAACG,uBAAD,EAA0BC,6BAA1B,CAAhB;AACD","sourcesContent":["import { call, takeLatest, put } from 'redux-saga/effects';\n\nimport {\n  getInitialCoordinatesSuccess,\n  getInitialCoordinatesFailure,\n  GET_INITIAL_COORDINATES,\n} from 'actions/dashboardAction';\n\nfunction* getInitialCoordinatesFunction() {\n  try {\n    var reader = new FileReader();\n    var file = require('../testt');\n\n    reader.onload = function(e) {\n      var text = reader.result;\n    }\n\n    reader.readAsText(file, 'utf8');\n //const file = fs.readFileSync('file.txt', 'utf8');\n //console.log(file);\n    //const data = yield movies$.then();\n  \n    //if (data && data.length > 0) {\n      /*const moviesData: MoviesAllDataContentType = {\n        movies: data,\n        categories: getMoviesCategories(data),\n      }*/\n    //  yield put(getInitialCoordinatesSuccess())\n    //} else {\n    //  yield put(getInitialCoordinatesFailure());\n    //}\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}"]},"metadata":{},"sourceType":"module"}