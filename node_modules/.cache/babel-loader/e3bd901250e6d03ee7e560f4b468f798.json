{"ast":null,"code":"var _jsxFileName = \"/Users/heloisetronche/dev/Internship_test/LivePlus/src/components/dashboard/Dashboard.tsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport DashboardHeader from 'components/fragments/DashboardHeader';\nimport 'styles/dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    this.generateMap = () => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"DashboardMapCase\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    };\n\n    this.showFile = async e => {\n      const {\n        getInitialCoordinates\n      } = this.props;\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        if (e.target) {\n          const text = e.target.result;\n\n          if (text) {\n            getInitialCoordinates(String(text));\n          }\n        }\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.state = {\n      generationNb: 0,\n      inputText: ''\n    };\n  }\n\n  render() {\n    //const { moviesData } = this.props;\n    const {\n      generationNb,\n      inputText\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DashboardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardButtonBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, \"Importer mon fichier\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"DashboardButton\",\n      type: \"file\",\n      onChange: this.showFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }\n    }, \"Exporter\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, \"Prochaine g\\xE9n\\xE9ration\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, \"Auto Play\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardGeneration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, \"G\\xE9n\\xE9ration num\\xE9ro: \", generationNb)), this.generateMap()));\n  }\n\n}\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/components/dashboard/Dashboard.tsx"],"names":["React","Component","withRouter","DashboardHeader","Dashboard","constructor","props","generateMap","showFile","e","getInitialCoordinates","preventDefault","reader","FileReader","onload","target","text","result","String","readAsText","files","state","generationNb","inputText","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAyD,OAAzD;AACA,SAASC,UAAT,QAAgD,kBAAhD;AAEA,OAAOC,eAAP,MAA4B,sCAA5B;AAIA,OAAO,sBAAP;;AAmBA,MAAMC,SAAN,SAAwBH,SAAxB,CAAgD;AAC9CI,EAAAA,WAAW,CAACC,KAAD,EAAe;AACxB,UAAMA,KAAN;;AADwB,SAQ1BC,WAR0B,GAQZ,MAAM;AAClB,0BACE;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAID,KAbyB;;AAAA,SAe1BC,QAf0B,GAef,MAAOC,CAAP,IAAmB;AAC5B,YAAM;AAAEC,QAAAA;AAAF,UAA4B,KAAKJ,KAAvC;AAEAG,MAAAA,CAAC,CAACE,cAAF;AAEA,YAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AAEAD,MAAAA,MAAM,CAACE,MAAP,GAAgB,MAAOL,CAAP,IAAa;AAC3B,YAAIA,CAAC,CAACM,MAAN,EAAc;AACZ,gBAAMC,IAAI,GAAIP,CAAC,CAACM,MAAF,CAASE,MAAvB;;AACA,cAAID,IAAJ,EAAU;AACRN,YAAAA,qBAAqB,CAACQ,MAAM,CAACF,IAAD,CAAP,CAArB;AACD;AACF;AACF,OAPD;;AAQAJ,MAAAA,MAAM,CAACO,UAAP,CAAkBV,CAAC,CAACM,MAAF,CAASK,KAAT,CAAe,CAAf,CAAlB;AACD,KA/ByB;;AAExB,SAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE,CADH;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAID;;AA2BDC,EAAAA,MAAM,GAAG;AACP;AACA,UAAM;AAAEF,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,QAA8B,KAAKF,KAAzC;AAEA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAC,6BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAEE;AAAO,MAAA,SAAS,EAAC,iBAAjB;AAAmC,MAAA,IAAI,EAAC,MAAxC;AAA+C,MAAA,QAAQ,EAAE,KAAKb,QAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAME;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAOE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAPF,eAQE;AAAQ,MAAA,SAAS,EAAC,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBARF,CADF,eAWE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAAuBc,YAAvB,CADF,CAXF,EAcG,KAAKf,WAAL,EAdH,CAFF,CADF;AAqBD;;AA3D6C;;AA8DhD,eAAeL,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import React, { Component, ChangeEvent, FormEvent } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport DashboardHeader from 'components/fragments/DashboardHeader';\n\nimport Status from 'types/StatusType';\n\nimport 'styles/dashboard.css';\nimport { CoordinatesContentType } from 'types/CoordinatesType';\n\nexport interface DispatchProps {\n  //getMovies: Function;\n  getInitialCoordinates: Function;\n}\n\nexport interface StateProps {\n  coordData: CoordinatesContentType;\n}\n\nexport interface State {\n  generationNb: number;\n  inputText: String;\n}\n\ntype Props = {} & DispatchProps & StateProps & RouteComponentProps;\n\nclass Dashboard extends Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      generationNb: 0,\n      inputText: '',\n    };\n  }\n\n  generateMap = () => {\n    return (\n      <div className=\"DashboardMapCase\">\n      </div>\n    )\n  }\n\n  showFile = async (e : any) => {\n    const { getInitialCoordinates } = this.props;\n\n    e.preventDefault();\n\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      if (e.target) {\n        const text = (e.target.result)\n        if (text) {\n          getInitialCoordinates(String(text));\n        }\n      }\n    }\n    reader.readAsText(e.target.files[0]);\n  }\n\n  render() {\n    //const { moviesData } = this.props;\n    const { generationNb, inputText } = this.state;\n\n    return (\n      <div>\n        <DashboardHeader />\n        <div className=\"DashboardContainer\">\n          <div className=\"DashboardButtonBarContainer\">\n            <label>\n              Importer mon fichier\n              <input className=\"DashboardButton\" type='file' onChange={this.showFile} />\n            </label>\n            \n            <button className=\"DashboardButton\">Exporter</button>\n            <button className=\"DashboardButton\">Prochaine génération</button>\n            <button className=\"DashboardButton\">Auto Play</button>\n          </div>\n          <div className=\"DashboardGeneration\">\n            <p>Génération numéro: {generationNb}</p>\n          </div>\n          {this.generateMap()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);"]},"metadata":{},"sourceType":"module"}