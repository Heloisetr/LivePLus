{"ast":null,"code":"var _jsxFileName = \"/Users/heloisetronche/dev/Internship_test/LivePlus/src/components/dashboard/Dashboard.tsx\";\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport DashboardHeader from 'components/fragments/DashboardHeader';\nimport 'styles/dashboard.css';\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.intervalID = void 0;\n\n    this.generateMap = () => {\n      const {\n        coordData\n      } = this.props;\n      return coordData.coordinates.map((cell, index) => {\n        if (index % coordData.mapLength === 0) {\n          if (cell === true) {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 13\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"DashboardMapCase\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 13\n              }\n            }));\n          } else {\n            return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"br\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 11\n              }\n            }), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"DashboardMapCaseFalse\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 11\n              }\n            }));\n          }\n        }\n\n        if (cell === true) {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"DashboardMapCase\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 11\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"div\", {\n            className: \"DashboardMapCaseFalse\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 9\n            }\n          });\n        }\n      });\n    };\n\n    this.showFile = async e => {\n      const {\n        getInitialCoordinates\n      } = this.props;\n      e.preventDefault();\n      const reader = new FileReader();\n\n      reader.onload = async e => {\n        if (e.target) {\n          const text = e.target.result;\n\n          if (text) {\n            getInitialCoordinates(String(text));\n          }\n        }\n      };\n\n      reader.readAsText(e.target.files[0]);\n    };\n\n    this.newGeneration = () => {\n      const {\n        getNextGeneration\n      } = this.props;\n      const {\n        generationNb\n      } = this.state;\n      getNextGeneration();\n      this.setState({\n        generationNb: generationNb + 1\n      });\n    };\n\n    this.autoPlay = () => {\n      const {\n        autoplay\n      } = this.state;\n      this.setState({\n        autoplay: !autoplay\n      });\n    };\n\n    this.exportFile = () => {};\n\n    this.state = {\n      generationNb: 0,\n      inputText: '',\n      autoplay: false\n    };\n    this.intervalID = 0;\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(() => this.tick(), 200);\n  }\n\n  tick() {\n    const {\n      autoplay,\n      generationNb\n    } = this.state;\n    const {\n      getNextGeneration\n    } = this.props;\n\n    if (autoplay && generationNb < 94) {\n      getNextGeneration();\n      this.setState({\n        generationNb: generationNb + 1\n      });\n    }\n  }\n\n  render() {\n    const {\n      generationNb\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DashboardHeader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardButtonBarContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Importer mon fichier\", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"DashboardButton\",\n      type: \"file\",\n      onChange: this.showFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      onClick: () => {\n        this.exportFile();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, \"Exporter\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      onClick: () => {\n        this.newGeneration();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }\n    }, \"Prochaine g\\xE9n\\xE9ration\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"DashboardButton\",\n      onClick: () => {\n        this.autoPlay();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, \"Auto Play\"), /*#__PURE__*/React.createElement(\"a\", {\n      datatype: \"text;tetesfege\",\n      download: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardGeneration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 13\n      }\n    }, \"G\\xE9n\\xE9ration num\\xE9ro: \", generationNb)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"DashboardMapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, this.generateMap())));\n  }\n\n}\n\nexport default withRouter(Dashboard);","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/components/dashboard/Dashboard.tsx"],"names":["React","Component","withRouter","DashboardHeader","Dashboard","constructor","props","intervalID","generateMap","coordData","coordinates","map","cell","index","mapLength","showFile","e","getInitialCoordinates","preventDefault","reader","FileReader","onload","target","text","result","String","readAsText","files","newGeneration","getNextGeneration","generationNb","state","setState","autoPlay","autoplay","exportFile","inputText","componentDidMount","setInterval","tick","render"],"mappings":"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","sourcesContent":["import React, { Component, ChangeEvent, FormEvent } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\n\nimport DashboardHeader from 'components/fragments/DashboardHeader';\n\nimport Status from 'types/StatusType';\n\nimport 'styles/dashboard.css';\nimport { CoordinatesContentType } from 'types/CoordinatesType';\n\nexport interface DispatchProps {\n  getInitialCoordinates: Function;\n  getNextGeneration: Function;\n}\n\nexport interface StateProps {\n  coordData: CoordinatesContentType;\n}\n\nexport interface State {\n  generationNb: number;\n  inputText: String;\n  autoplay: boolean;\n}\n\ntype Props = {} & DispatchProps & StateProps & RouteComponentProps;\n\nclass Dashboard extends Component<Props, State> {\n  intervalID: any;\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      generationNb: 0,\n      inputText: '',\n      autoplay: false,\n    };\n    this.intervalID = 0;\n  }\n\n  componentDidMount() {\n    this.intervalID = setInterval(\n      () => this.tick(),\n      200\n    );\n  }\n\n  tick() {\n    const { autoplay, generationNb } = this.state;\n    const { getNextGeneration } = this.props;\n\n    if (autoplay && generationNb < 94) {\n      getNextGeneration();\n      this.setState({ generationNb: generationNb + 1 });\n    }\n  }\n\n  generateMap = () => {\n    const { coordData } = this.props;\n\n    return coordData.coordinates.map((cell, index) => {\n      if (index % coordData.mapLength === 0) {\n        if (cell === true) {\n          return (\n            <>\n            <br/>\n            <div className=\"DashboardMapCase\">\n            </div>\n            </>\n          )\n        } else {\n        return (\n          <>\n          <br/>\n          <div className=\"DashboardMapCaseFalse\">\n          </div>\n          </>\n        )\n      }\n    }\n      if (cell === true) {\n        return (\n          <div className=\"DashboardMapCase\">\n          </div>\n        )\n      } else {\n      return (\n        <div className=\"DashboardMapCaseFalse\">\n        </div>\n      )\n      }\n    })\n    \n  }\n\n  showFile = async (e : any) => {\n    const { getInitialCoordinates } = this.props;\n\n    e.preventDefault();\n\n    const reader = new FileReader();\n\n    reader.onload = async (e) => {\n      if (e.target) {\n        const text = (e.target.result)\n        if (text) {\n          getInitialCoordinates(String(text));\n        }\n      }\n    }\n    reader.readAsText(e.target.files[0]);\n  }\n\n  newGeneration = () => {\n    const { getNextGeneration } = this.props;\n    const { generationNb } = this.state;\n\n    getNextGeneration();\n    this.setState({ generationNb: generationNb + 1 });\n  }\n\n  autoPlay = () => {\n    const { autoplay } = this.state;\n\n    this.setState({ autoplay: !autoplay });\n  }\n\n  exportFile = () => {\n\n  }\n\n  render() {\n    const { generationNb } = this.state;\n\n    return (\n      <div>\n        <DashboardHeader />\n        <div className=\"DashboardContainer\">\n          <div className=\"DashboardButtonBarContainer\">\n            <label>\n              Importer mon fichier\n              <input className=\"DashboardButton\" type='file' onChange={this.showFile} />\n            </label>\n            <button className=\"DashboardButton\" onClick={() => {this.exportFile()}}>Exporter</button>\n            <button className=\"DashboardButton\" onClick={() => {this.newGeneration()}}>Prochaine génération</button>\n            <button className=\"DashboardButton\" onClick={() => {this.autoPlay()}} >Auto Play</button>\n            <a datatype=\"text;tetesfege\" download></a>\n          </div>\n          <div className=\"DashboardGeneration\">\n            <p>Génération numéro: {generationNb}</p>\n          </div>\n          <div className=\"DashboardMapContainer\">\n            {this.generateMap()}\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(Dashboard);"]},"metadata":{},"sourceType":"module"}