{"ast":null,"code":"import { takeLatest, put } from 'redux-saga/effects';\nimport { getInitialCoordinatesSuccess, getInitialCoordinatesFailure, GET_INITIAL_COORDINATES } from 'actions/dashboardAction';\nimport calculateActiveCells from 'utils/calculateActiveCells';\n\nfunction* getInitialCoordinatesFunction(action) {\n  const {\n    payload\n  } = action;\n\n  try {\n    console.log(payload);\n\n    if (payload.length > 0) {\n      const data = calculateActiveCells(payload);\n      yield put(getInitialCoordinatesSuccess({\n        mapLength: data.mapLength,\n        coordinates: data.fileCoordinates\n      }));\n    } else {\n      yield put(getInitialCoordinatesFailure());\n    }\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/sagas/dashboardSaga.ts"],"names":["takeLatest","put","getInitialCoordinatesSuccess","getInitialCoordinatesFailure","GET_INITIAL_COORDINATES","calculateActiveCells","getInitialCoordinatesFunction","action","payload","console","log","length","data","mapLength","coordinates","fileCoordinates","e","dashboardSaga"],"mappings":"AAAA,SAAeA,UAAf,EAA2BC,GAA3B,QAA8C,oBAA9C;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,uBAHF,QAKO,yBALP;AAOA,OAAOC,oBAAP,MAAiC,4BAAjC;;AAEA,UAAUC,6BAAV,CAAwCC,MAAxC,EAAgF;AAC9E,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB;;AAEA,MAAI;AACFE,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,QAAIA,OAAO,CAACG,MAAR,GAAiB,CAArB,EAAwB;AACtB,YAAMC,IAAI,GAAGP,oBAAoB,CAACG,OAAD,CAAjC;AAEA,YAAMP,GAAG,CAACC,4BAA4B,CAAC;AAAEW,QAAAA,SAAS,EAAED,IAAI,CAACC,SAAlB;AAA6BC,QAAAA,WAAW,EAAEF,IAAI,CAACG;AAA/C,OAAD,CAA7B,CAAT;AACD,KAJD,MAIO;AACL,YAAMd,GAAG,CAACE,4BAA4B,EAA7B,CAAT;AACD;AACF,GATD,CASE,OAAOa,CAAP,EAAU;AACV,UAAMf,GAAG,CAACE,4BAA4B,EAA7B,CAAT;AACD;AACF;;AAED,eAAe,UAAUc,aAAV,GAA0B;AACvC,QAAMjB,UAAU,CAACI,uBAAD,EAA0BE,6BAA1B,CAAhB;AACD","sourcesContent":["import { call, takeLatest, put, select } from 'redux-saga/effects';\n\nimport {\n  getInitialCoordinatesSuccess,\n  getInitialCoordinatesFailure,\n  GET_INITIAL_COORDINATES,\n  GET_INITIAL_COORDINATES_ACTION\n} from 'actions/dashboardAction';\n\nimport calculateActiveCells from 'utils/calculateActiveCells';\n\nfunction* getInitialCoordinatesFunction(action: GET_INITIAL_COORDINATES_ACTION) {\n  const { payload } = action;\n\n  try {\n    console.log(payload);\n    if (payload.length > 0) {\n      const data = calculateActiveCells(payload);\n\n      yield put(getInitialCoordinatesSuccess({ mapLength: data.mapLength, coordinates: data.fileCoordinates }))\n    } else {\n      yield put(getInitialCoordinatesFailure());\n    }\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}"]},"metadata":{},"sourceType":"module"}