{"ast":null,"code":"import { takeLatest, put, select } from 'redux-saga/effects';\nimport { getInitialCoordinatesSuccess, getInitialCoordinatesFailure, GET_INITIAL_COORDINATES } from 'actions/dashboardAction';\nimport { calculateActiveCells } from 'utils/calculateActiveCells';\n\nfunction* getInitialCoordinatesFunction(action) {\n  const {\n    dashboardState: {\n      mapLength\n    }\n  } = yield select();\n  const payload = action;\n\n  try {\n    console.log(payload);\n\n    if (payload.payload.length > 0) {\n      const data = calculateActiveCells(payload.payload);\n      /*const moviesData: MoviesAllDataContentType = {\n        movies: data,\n        categories: getMoviesCategories(data),\n      }*/\n\n      yield put(getInitialCoordinatesSuccess());\n    } else {\n      yield put(getInitialCoordinatesFailure());\n    }\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}","map":{"version":3,"sources":["/Users/heloisetronche/dev/Internship_test/LivePlus/src/sagas/dashboardSaga.ts"],"names":["takeLatest","put","select","getInitialCoordinatesSuccess","getInitialCoordinatesFailure","GET_INITIAL_COORDINATES","calculateActiveCells","getInitialCoordinatesFunction","action","dashboardState","mapLength","payload","console","log","length","data","e","dashboardSaga"],"mappings":"AAAA,SAAeA,UAAf,EAA2BC,GAA3B,EAAgCC,MAAhC,QAA8C,oBAA9C;AAEA,SACEC,4BADF,EAEEC,4BAFF,EAGEC,uBAHF,QAKO,yBALP;AAMA,SAASC,oBAAT,QAAqC,4BAArC;;AAEA,UAAUC,6BAAV,CAAwCC,MAAxC,EAAgF;AAC9E,QAAM;AACJC,IAAAA,cAAc,EAAE;AAAEC,MAAAA;AAAF;AADZ,MAEF,MAAMR,MAAM,EAFhB;AAGA,QAAMS,OAAO,GAAGH,MAAhB;;AAEA,MAAI;AACFI,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;;AACA,QAAIA,OAAO,CAACA,OAAR,CAAgBG,MAAhB,GAAyB,CAA7B,EAAgC;AAC9B,YAAMC,IAAI,GAAGT,oBAAoB,CAACK,OAAO,CAACA,OAAT,CAAjC;AACA;AACN;AACA;AACA;;AACM,YAAMV,GAAG,CAACE,4BAA4B,EAA7B,CAAT;AACD,KAPD,MAOO;AACL,YAAMF,GAAG,CAACG,4BAA4B,EAA7B,CAAT;AACD;AACF,GAZD,CAYE,OAAOY,CAAP,EAAU;AACV,UAAMf,GAAG,CAACG,4BAA4B,EAA7B,CAAT;AACD;AACF;;AAED,eAAe,UAAUa,aAAV,GAA0B;AACvC,QAAMjB,UAAU,CAACK,uBAAD,EAA0BE,6BAA1B,CAAhB;AACD","sourcesContent":["import { call, takeLatest, put, select } from 'redux-saga/effects';\n\nimport {\n  getInitialCoordinatesSuccess,\n  getInitialCoordinatesFailure,\n  GET_INITIAL_COORDINATES,\n  GET_INITIAL_COORDINATES_ACTION\n} from 'actions/dashboardAction';\nimport { calculateActiveCells } from 'utils/calculateActiveCells';\n\nfunction* getInitialCoordinatesFunction(action: GET_INITIAL_COORDINATES_ACTION) {\n  const {\n    dashboardState: { mapLength },\n  } = yield select();\n  const payload = action;\n\n  try {\n    console.log(payload);\n    if (payload.payload.length > 0) {\n      const data = calculateActiveCells(payload.payload);\n      /*const moviesData: MoviesAllDataContentType = {\n        movies: data,\n        categories: getMoviesCategories(data),\n      }*/\n      yield put(getInitialCoordinatesSuccess())\n    } else {\n      yield put(getInitialCoordinatesFailure());\n    }\n  } catch (e) {\n    yield put(getInitialCoordinatesFailure());\n  }\n}\n\nexport default function* dashboardSaga() {\n  yield takeLatest(GET_INITIAL_COORDINATES, getInitialCoordinatesFunction);\n}"]},"metadata":{},"sourceType":"module"}